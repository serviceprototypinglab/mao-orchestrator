[
    {
        "name": "system-performance",
        "description": "Runs local code execution performance measurement.",
        "steps": [
            {
                "name": "acquisition",
                "tool": "performancetool",
                "env": {},
                "cmd": [],
                "docker_socket": false,
                "input_dataset": null,
                "output_dataset": "system-performance-dataset"
            }
        ]
    },
    {
        "name": "skan-argocd-demo",
        "description": "Runs the sKan scanner on fetched ArgoCD k8s resources.",
        "steps": [
            {
                "name": "acquisition",
                "tool": "busybox",
                "cmd": [
                    "sh",
                    "-c",
                    "rm -rf /usr/src/app/data/argo-cd-master && wget https://github.com/argoproj/argo-cd/archive/refs/heads/master.zip && unzip master.zip -d /usr/src/app/data"
                ],
                "env": {},
                "docker_socket": false,
                "input_dataset": null,
                "output_dataset": "skan-acq-demo-dataset"
            },
            {
                "name": "assessment",
                "tool": "skan",
                "cmd": [
                    "manifest",
                    "-f",
                    "/usr/src/app/input",
                    "-o",
                    "json",
                    "--outputfile",
                    "/usr/src/app/data/output_skan.json"
                ],
                "env": {},
                "docker_socket": false,
                "input_dataset": "skan-acq-demo-dataset",
                "output_dataset": "skan-asses-demo-dataset"
            },
            {
                "name": "format",
                "tool": "busybox",
                "cmd": [
                    "sh",
                    "-c",
                    "mv /usr/src/app/input/output_skan.json /usr/src/app/data/output_skan_$(date +%Y-%m-%d).json && sleep 1"
                ],
                "env": {},
                "docker_socket": false,
                "input_dataset": "skan-asses-demo-dataset",
                "output_dataset": "skan-result-demo-dataset"
            }
        ]
    },
    {
        "name": "ArtifactHUB Collector with Helm download",
        "description": "Metadata collector for the ArtifactHUB repository + download of Helm charts.",
        "steps": [
            {
                "name": "data-acquisition",
                "tool": "artifacthub_collector",
                "env": {
                    "ARTIFACT_HUB_API_KEY_ID": "{{ MAO_PRIVATE_VARIABLE }}",
                    "ARTIFACT_HUB_API_KEY_SECRET": "{{ MAO_PRIVATE_VARIABLE }}"
                },
                "docker_socket": false,
                "input_dataset": null,
                "output_dataset": "artifacthub-collector-helm-dataset",
                "cmd": [
                    "sh",
                    "-c",
                    "python main.py all"
                ]
            }
        ]
    },
    {
        "name": "ArtifactHUB Collector packages only",
        "description": "Metadata collector for the ArtifactHUB repository - packages only.",
        "steps": [
            {
                "name": "data-acquisition",
                "tool": "artifacthub_collector",
                "env": {},
                "cmd": [],
                "docker_socket": false,
                "input_dataset": null,
                "output_dataset": "artifacthub-collector-po-dataset"
            }
        ]
    },
    {
        "name": "DockerHub Collector",
        "description": "Metadata collector for DockerHub.",
        "steps": [
            {
                "name": "data-acquisition",
                "tool": "dockerhub_collector",
                "env": {},
                "cmd": [],
                "docker_socket": false,
                "input_dataset": null,
                "output_dataset": "dockerhub-collector-dataset"
            }
        ]
    },
    {
        "name": "AWS SAR Analysis",
        "description": "Collect and assess several kinds of metadata around serverless functions.",
        "steps": [
            {
                "name": "execution",
                "tool": "aws-sar-analyser",
                "env": {},
                "cmd": [],
                "docker_socket": false,
                "input_dataset": null,
                "output_dataset": "aws-sar-dataset"
            }
        ]
    },
    {
        "name": "CIPolice Scanner",
        "description": "Scans the DockerHub library images with trivy.",
        "steps": [
            {
                "name": "execution",
                "tool": "cipolice-scanner",
                "docker_socket": true,
                "input_dataset": null,
                "output_dataset": "cipolice-dataset",
                "cmd": [],
                "env": {
                    "CIPOLICE_TIMESTAMPED_OUTPUT": "True",
                    "CIPOLICE_OUTPUT_PATH": "data"
                }
            }
        ]
    },
    {
        "name": "Docker-Compose Validator Demo",
        "description": "Validity check and quality metrics on docker-compose a demo compose file.",
        "steps": [
            {
                "name": "acquirement",
                "tool": "busybox",
                "cmd": [
                    "sh",
                    "-c",
                    "wget https://raw.githubusercontent.com/sameersbn/docker-gitlab/master/docker-compose.yml -O /usr/src/app/data/docker-compose.yml"
                ],
                "env": {},
                "docker_socket": false,
                "input_dataset": null,
                "output_dataset": "dc-validator-input-dataset"
            },
            {
                "name": "assessment",
                "tool": "dc-validator",
                "cmd": [
                    "sh",
                    "-c",
                    "python ./validator-cli.py -f ./input/docker-compose.yml -fi 'Duplicate Keys,Top level property,Duplicate ports,Container name,Typing mistakes, DNS, Duplicate expose' -o ./data/result_$(date +%Y-%m-%d).json"
                ],
                "env": {},
                "docker_socket": false,
                "input_dataset": "dc-validator-input-dataset",
                "output_dataset": "dc-validator-dataset"
            }
        ]
    }
]